/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import PortConfigurator.PortConfig;
import staff.*;
import java.sql.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.Connection;
import main.newTest;

/**
 *
 * @author Almar Dave
 */
public class dashboard extends javax.swing.JFrame {

    Connection con = new Connection();
    String accountid = "";
    newTest nt;
    updateValue uv;
    PortConfig pc = new PortConfig();

    /**
     * Creates new form dashboard
     */
    public dashboard() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public dashboard(String AccountNumber) {
        initComponents();
        this.accountid = AccountNumber;
        setLocationRelativeTo(null);
        ResultSet rs = con.getData("select * from users u inner join position p on u.pos = p.PosId where licenseId = " + AccountNumber);
        try {
            while (rs.next()) {
                lblUserFullname.setText(rs.getString("Fname") + " " + rs.getString("LName"));
                lblUserPosition.setText(rs.getString("position"));
            }
        } catch (SQLException ex) {
            JOptionPane.showInternalMessageDialog(null, ex);
        }

        clock();
        refreshTables();
    }

    private void clock() {
        Thread clock = new Thread() {
            public void run() {
                for (;;) {
                    try {
                        Calendar cal = new GregorianCalendar();
                        int month = cal.get(Calendar.MONTH);
                        int day = cal.get(Calendar.DAY_OF_MONTH);
                        int year = cal.get(Calendar.YEAR);
                        int ampm = cal.get(Calendar.AM_PM);
                        int hour = cal.get(Calendar.HOUR);
                        int min = cal.get(Calendar.MINUTE);
                        lblDate.setText(month + 1 + "/" + day + "/" + year);
                        lblTime.setText(hour + ":" + min + " " + ((ampm == 1) ? "PM" : "AM"));
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        clock.start();

    }

    private void refreshTables() {
        Thread refresh = new Thread() {
            public void run() {
                for (;;) {
                    try {sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    lblPending.setText(String.valueOf(con.rowCount("SELECT * FROM receipt where stat = 'pending'")));
                    lblDone.setText(String.valueOf(con.rowCount("SELECT * FROM receipt where stat = 'done'")));
                }
            }
        };
        refresh.start();
    }

    public DefaultTableModel getTable(String[] columns, String query) {
        DefaultTableModel model = new DefaultTableModel();
        ResultSet rs;
        try {
            for (String column : columns) {
                model.addColumn(column);
            }
            rs = con.getData(query);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getErrorCode() + "\n" + ex.getLocalizedMessage(), "Warning!", JOptionPane.WARNING_MESSAGE);
        }
        return model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftNavigationPanel = new javax.swing.JPanel();
        lblUserPicture = new javax.swing.JLabel();
        lblUserFullname = new javax.swing.JLabel();
        lblUserPosition = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        btnSerial = new javax.swing.JButton();
        topNavigationPanel = new javax.swing.JPanel();
        lblDateandTime = new javax.swing.JLabel();
        btnNewTest = new javax.swing.JButton();
        Jlabel = new javax.swing.JLabel();
        Jlabel1 = new javax.swing.JLabel();
        lblDone = new javax.swing.JLabel();
        lblPending = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        mainActivityPane = new javax.swing.JTabbedPane();
        pnlPendingResults = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChinicalMic = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblHematology = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblclinicalChem = new javax.swing.JTable();
        pnlPendingResults1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Sampana Laboratory Clinic");
        setName("mainframe"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1336, 728));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        leftNavigationPanel.setMaximumSize(new java.awt.Dimension(400, 728));

        lblUserPicture.setForeground(new java.awt.Color(255, 255, 255));
        lblUserPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserPicture.setText("Picture");
        lblUserPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255)));

        lblUserFullname.setForeground(new java.awt.Color(255, 255, 255));
        lblUserFullname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserFullname.setText("Full Name");

        lblUserPosition.setForeground(new java.awt.Color(255, 255, 255));
        lblUserPosition.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserPosition.setText("Position");

        btnLogout.setText("Logout");

        btnSerial.setText("Open Serial Monitor");
        btnSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftNavigationPanelLayout = new javax.swing.GroupLayout(leftNavigationPanel);
        leftNavigationPanel.setLayout(leftNavigationPanelLayout);
        leftNavigationPanelLayout.setHorizontalGroup(
            leftNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftNavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUserFullname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUserPicture, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUserPosition, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(btnSerial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftNavigationPanelLayout.setVerticalGroup(
            leftNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftNavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblUserFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblUserPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lblDateandTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDateandTime.setText("Date and Time");

        btnNewTest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNewTest.setText("New Test");
        btnNewTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewTestActionPerformed(evt);
            }
        });

        Jlabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Jlabel.setText("Patients Today");

        Jlabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Jlabel1.setText("Tests Made");

        lblDone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDone.setText("0");

        lblPending.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPending.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPending.setText("0");

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setText("month/day/year");

        lblTime.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTime.setText("Time");

        javax.swing.GroupLayout topNavigationPanelLayout = new javax.swing.GroupLayout(topNavigationPanel);
        topNavigationPanel.setLayout(topNavigationPanelLayout);
        topNavigationPanelLayout.setHorizontalGroup(
            topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topNavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNewTest, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPending, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Jlabel))
                .addGap(205, 205, 205)
                .addGroup(topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topNavigationPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Jlabel1))
                    .addGroup(topNavigationPanelLayout.createSequentialGroup()
                        .addComponent(lblDone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(topNavigationPanelLayout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(lblDateandTime, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topNavigationPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(48, 48, 48)))))
                .addContainerGap())
        );
        topNavigationPanelLayout.setVerticalGroup(
            topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(topNavigationPanelLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDone, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPending, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topNavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewTest, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Jlabel)
                    .addComponent(Jlabel1))
                .addContainerGap())
            .addGroup(topNavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDateandTime, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Test Number", "Test", "Sub-test", "Sub-sub-test"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        tblChinicalMic.addTab("Clinical Microscopy", jPanel1);

        tblHematology.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Test Number", "Test", "Sub-test", "Sub-sub-test", "Conv. Reference Range", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblHematology);
        if (tblHematology.getColumnModel().getColumnCount() > 0) {
            tblHematology.getColumnModel().getColumn(0).setResizable(false);
            tblHematology.getColumnModel().getColumn(1).setResizable(false);
            tblHematology.getColumnModel().getColumn(2).setResizable(false);
            tblHematology.getColumnModel().getColumn(3).setResizable(false);
            tblHematology.getColumnModel().getColumn(4).setResizable(false);
            tblHematology.getColumnModel().getColumn(4).setHeaderValue("Conv. Reference Range");
            tblHematology.getColumnModel().getColumn(5).setResizable(false);
            tblHematology.getColumnModel().getColumn(5).setHeaderValue("Unit");
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        tblChinicalMic.addTab("Hematology", jPanel2);

        tblclinicalChem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Test Number", "Test", "Sub-test", "Sub-sub-test", "Conv. Reference Range", "Unit", "Si Reference Range", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblclinicalChem);
        if (tblclinicalChem.getColumnModel().getColumnCount() > 0) {
            tblclinicalChem.getColumnModel().getColumn(0).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(1).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(2).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(3).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(4).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(4).setHeaderValue("Conv. Reference Range");
            tblclinicalChem.getColumnModel().getColumn(5).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(5).setHeaderValue("Unit");
            tblclinicalChem.getColumnModel().getColumn(6).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(6).setHeaderValue("Si Reference Range");
            tblclinicalChem.getColumnModel().getColumn(7).setResizable(false);
            tblclinicalChem.getColumnModel().getColumn(7).setHeaderValue("Unit");
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1116, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1116, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(34, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(34, Short.MAX_VALUE)))
        );

        tblChinicalMic.addTab("Clinical Chemistry", jPanel3);

        jScrollPane1.setViewportView(tblChinicalMic);

        javax.swing.GroupLayout pnlPendingResultsLayout = new javax.swing.GroupLayout(pnlPendingResults);
        pnlPendingResults.setLayout(pnlPendingResultsLayout);
        pnlPendingResultsLayout.setHorizontalGroup(
            pnlPendingResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPendingResultsLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        pnlPendingResultsLayout.setVerticalGroup(
            pnlPendingResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPendingResultsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainActivityPane.addTab("Test", pnlPendingResults);

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Restriction", "Full Name", "Position", "License Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatients.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblPatientsFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(tblPatients);
        if (tblPatients.getColumnModel().getColumnCount() > 0) {
            tblPatients.getColumnModel().getColumn(0).setResizable(false);
            tblPatients.getColumnModel().getColumn(1).setResizable(false);
            tblPatients.getColumnModel().getColumn(2).setResizable(false);
            tblPatients.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout pnlPendingResults1Layout = new javax.swing.GroupLayout(pnlPendingResults1);
        pnlPendingResults1.setLayout(pnlPendingResults1Layout);
        pnlPendingResults1Layout.setHorizontalGroup(
            pnlPendingResults1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPendingResults1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1118, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPendingResults1Layout.setVerticalGroup(
            pnlPendingResults1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPendingResults1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainActivityPane.addTab("Staff", pnlPendingResults1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(leftNavigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topNavigationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainActivityPane)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(leftNavigationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topNavigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainActivityPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int ans = JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Logout", JOptionPane.YES_NO_OPTION);
        switch (ans) {
            case 0 -> {
                System.exit(0);
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnNewTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewTestActionPerformed
        if (nt == null || !nt.isVisible()) {
            nt = new newTest(this.accountid);
            nt.setVisible(true);
        } else {
            nt.toFront();
        }
    }//GEN-LAST:event_btnNewTestActionPerformed

    private void tblPatientsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblPatientsFocusGained
        System.out.println("focus gained");
    }//GEN-LAST:event_tblPatientsFocusGained

    private void btnSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialActionPerformed
        if (pc == null || !pc.isVisible()) {
            pc.setVisible(true);
        } else {
            nt.toFront();
        }
    }//GEN-LAST:event_btnSerialActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Jlabel;
    private javax.swing.JLabel Jlabel1;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNewTest;
    private javax.swing.JButton btnSerial;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDateandTime;
    private javax.swing.JLabel lblDone;
    private javax.swing.JLabel lblPending;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblUserFullname;
    private javax.swing.JLabel lblUserPicture;
    private javax.swing.JLabel lblUserPosition;
    private javax.swing.JPanel leftNavigationPanel;
    private javax.swing.JTabbedPane mainActivityPane;
    private javax.swing.JPanel pnlPendingResults;
    private javax.swing.JPanel pnlPendingResults1;
    private javax.swing.JTabbedPane tblChinicalMic;
    private javax.swing.JTable tblHematology;
    private javax.swing.JTable tblPatients;
    private javax.swing.JTable tblclinicalChem;
    private javax.swing.JPanel topNavigationPanel;
    // End of variables declaration//GEN-END:variables
}
